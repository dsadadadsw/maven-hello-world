name: Maven CI/CD
on:
  push:
     branches: [ dev ]
env:
  REPOSITORY: doronamsalem/mvn_hello_world
  POM: ./my-app/pom.xml
jobs:
  ci-cd:
    runs-on: ubuntu-22.04
    steps:
    -
      uses: actions/checkout@v3    #clone repository files into working dir
    -
      name: Clean
      run: mvn -B clean -f $POM
    -
      name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
    -
      name: Increase version
      run : |
            mvn -B release:update-versions -f $POM     #increase the patch
            mvn versions:set -DremoveSnapshot -f $POM   #remove "-SNAPSHOT"
            echo "NEW_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout -f $POM)" >> $GITHUB_ENV

    -
      name: Build-maven project
      run: mvn -B package -f $POM
    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: doronamsalem
        password: ${{ secrets.DOCKER_PSW }}
    -
      name: Delivery-build & push to DockerHub
      run: |
           docker image build -t $REPOSITORY:${{ env.NEW_VERSION }} .
           docker push $REPOSITORY:${{ env.NEW_VERSION }}
           docker rmi $REPOSITORY:${{ env.NEW_VERSION }}
           echo "~~~~version ${{ env.NEW_VERSION }} accessable on dockerhub~~~~"
    -
      name: Commit pom version
      uses: EndBug/add-and-commit@v9
      with:
          add: './my-app/pom.xml'
          author_name: doron amsalem
          author_email: 100doron100@gmail.com
          fetch: false
          message: 'update pom version'
    -
      # ubuntu OS is required
      # for others OS, install docker and comment the step below and the "docker installation" section in the next step
        name: copy file via ssh
        uses: nogsantos/scp-deploy@master
        with:
          src: ./.github/scripts/*
          host: ${{ secrets.HOST_SSH }}
          remote: ~/docker_installation
          user: ${{ secrets.USER_SSH }}
          key: ${{ secrets.EC2_KEY }}
    -
      name: Deploy-ec2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_SSH }}
        username: ${{ secrets.USER_SSH }}
        key: ${{ secrets.EC2_KEY }}
        script: |
            # docker installation
              chmod +x ~/docker_installation
              ~/docker_installation
              rm ~/docker_installation
            # clean environment
              sudo docker system prune -af
              sudo docker run --name production "${{ env.REPOSITORY }}:${{ env.NEW_VERSION }}"
